	.section	__TEXT,__text,regular,pure_instructions
	.macosx_version_min 10, 10
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp0:
	.cfi_def_cfa_offset 16
Ltmp1:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp2:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	leaq	L_.str(%rip), %rdi
	leaq	-24(%rbp), %rsi
	xorl	%eax, %eax
	movl	$8, %ecx
	movl	%ecx, %edx
	leaq	-16(%rbp), %r8
	movq	___stack_chk_guard@GOTPCREL(%rip), %r9
	movq	(%r9), %r9
	movq	%r9, -8(%rbp)
	movq	%rdi, -32(%rbp)         ## 8-byte Spill
	movq	%r8, %rdi
	movq	%rsi, -40(%rbp)         ## 8-byte Spill
	movl	%eax, %esi
	callq	_memset
	movl	$100, -20(%rbp)
	movl	$0, -24(%rbp)
	movq	-32(%rbp), %rdi         ## 8-byte Reload
	movq	-40(%rbp), %rsi         ## 8-byte Reload
	movb	$0, %al
	callq	_scanf
	leaq	L_.str1(%rip), %rdi
	movslq	-24(%rbp), %rdx
	movl	$50, -16(%rbp,%rdx,4)
	movl	-20(%rbp), %esi
	movslq	-24(%rbp), %rdx
	movl	-16(%rbp,%rdx,4), %edx
	movl	%eax, -44(%rbp)         ## 4-byte Spill
	movb	$0, %al
	callq	_printf
	movq	___stack_chk_guard@GOTPCREL(%rip), %rdi
	movq	(%rdi), %rdi
	cmpq	-8(%rbp), %rdi
	movl	%eax, -48(%rbp)         ## 4-byte Spill
	jne	LBB0_2
## BB#1:                                ## %SP_return
	xorl	%eax, %eax
	addq	$48, %rsp
	popq	%rbp
	retq
LBB0_2:                                 ## %CallStackCheckFailBlk
	callq	___stack_chk_fail
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"Enter index you want to change %d"

L_.str1:                                ## @.str1
	.asciz	"%d\t%d\n"


.subsections_via_symbols
